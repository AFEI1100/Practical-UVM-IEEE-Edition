1   class my_driver1 #(type T=uvm_object) extends uvm_driver;
   2   
     3     // parameterized classes must use the _param_utils version
       4     `uvm_component_param_utils(my_driver1 #(T))
   5   
     6     // our packet type; this can be overridden via the factory
       7     T pkt;
   8   
     9     // standard component constructor
       10     function new(string name, uvm_component parent=null);
	  11       super.new(name,parent);
	  12     endfunction
   13   
     14     // get_type_name not implemented by macro for parameterized classes
       15     const static string type_name = {"my_driver1 #(",T::type_name,")"};
   16     virtual function string get_type_name();
      17       return type_name;
      18     endfunction
   19   
     20     // using the factory allows pkt overrides from outside the class
       21     virtual function void build_phase(uvm_phase phase);
	  22       pkt = packet::type_id::create("pkt",this);
	  23     endfunction
   24   
     25     // print the packet so we can confirm its type when printing
       26     virtual function void do_print(uvm_printer printer);
	  27       printer.print_object("pkt",pkt);
	  28     endfunction
   29   
     30   endclass
31   
  32   
