1   typedef class uvm_object;
   2   class param_drv #(type T=uvm_object) extends uvm_driver;
      3   
	4     // parameterized classes must use the _param_utils macro
	  5     `uvm_component_param_utils(param_drv #(T))
      6   
	7     // standard component constructor
	  8     function new(string name, uvm_component parent=null);
	     9       super.new(name,parent);
	     10     endfunction
      11   
	12     // get_type_name not implemented by macro for parameterized classes
	  13     const static string type_name = {"param_drv #(",T::type_name,")"};
      14     virtual function string get_type_name();
	 15       return type_name;
	 16     endfunction
      17   
	18     // using the factory allows pkt overrides from outside the class
	  19     virtual function void build_phase(uvm_phase phase);
	     20       pkt= packet::type_id::create("pkt",this);
	     21     endfunction
      22   
	23   endclass
   24   
     25   typedef param_drv #(packet) param_driver;   
   26   
     27   class param_drv_d #(type T=uvm_object) extends param_drv #(T);
	28   
	  29     `uvm_component_param_utils(param_drv_d #(T))
	30   
	  31     function new(string name, uvm_component parent=null);
	     32       super.new(name,parent);
	     33     endfunction
	34   
	  35     const static string type_name = {"param_drv_d #(",T::type_name,")"};
	36     virtual function string get_type_name();
	   37       return type_name;
	   38     endfunction
	39   
	  40   endclass
   41   typedef param_drv_d #(packet) param_drv_der;
   42   
     43   
       44   class param_drv_d2 #(type T=uvm_object) extends param_drv #(T);
	  45   
	    46     `uvm_component_param_utils(param_drv_d2 #(T))
	  47   
	    48     function new(string name, uvm_component parent=null);
	       49       super.new(name,parent);
	       50     endfunction
	  51   
	    52     const static string type_name = {"param_drv_d2 #(",T::type_name,")"};
	  53     virtual function string get_type_name();
	     54       return type_name;
	     55     endfunction
	  56   
	    57   endclass
   58   
     59   // typedef some specializations for convenience
       60   typedef param_drv_d2 #(packet) param_drv_der2;  //  a second derived driver
