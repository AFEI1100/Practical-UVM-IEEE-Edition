Invoking simulator...

./simv -l simv.log +ntb_random_seed=1 +UVM_TESTNAME=wb_env_slave_test +UVM_TR_RECORD +UVM_LOG_RECORD -sml=verdi +UVM_VERDI_TRACE=UVM_AWARE +fsdb+event_dump_unfinished +fsdb+gate=off -ucli2Proc -lca -ucli
debImport "-i" "-simflow" "-dbdir" "./simv.daidir"
*Verdi* Loading libsscore_vcs201906.so

FSDB Dumper for VCS, Release Verdi_P-2019.06, Linux, 05/26/2019
(C) 1996 - 2019 by Synopsys, Inc.

*Verdi* : Create FSDB file '/SCRATCH/srivats/vs/IEEE_Book/Practical-UVM-IEEE-Edition/Advanced_UVM_Topics/Out_of_order/run/inter.fsdb'

*Verdi* : Flush all FSDB Files at 0 s.

*Verdi* : Enable RPC Server(13076)

srcTBInvokeSim
Warning-[LCA_FEATURES_ENABLED] Usage warning
  LCA features enabled by '-lca' argument on the command line.  For more 
  information regarding list of LCA features please refer to Chapter "LCA 
  features" in the VCS Release Notes
Chronologic VCS simulator copyright 1991-2019
Contains Synopsys proprietary information.
Compiler version P-2019.06; Runtime version P-2019.06;  Aug 29 14:19 2019
UVM_INFO /global/apps/vcs_2019.06/etc/uvm-ieee/base/uvm_root.svh(460) @ 0: reporter [UVM/RELNOTES] 
  ***********       IMPORTANT RELEASE NOTES         ************
  This implementation of the UVM Library deviates from the 1800.2-2017
  standard.  See the DEVIATIONS.md file contained in the release
  for more details.
----------------------------------------------------------------
Accellera:1800.2-2017:UVM:1.0.Synopsys
All copyright owners for this kit are listed in NOTICE.txt
All Rights Reserved Worldwide
----------------------------------------------------------------
      (Specify +UVM_NO_RELNOTES to turn off this notice)
srcTBBTreeSelect -win $_nTrace1 -path "wb_env_tb_mod"
srcTBBTreeSelect -win $_nTrace1 -path "wb_env_tb_mod"
srcTBTreeAction -win $_nTrace1 -path "wb_env_tb_mod"
srcTBBTreeSelect -win $_nTrace1 -path "wb_env_tb_mod.wb_master"
srcTBBTreeSelect -win $_nTrace1 -path "wb_env_tb_mod.wb_master"
srcTBTreeAction -win $_nTrace1 -path "wb_env_tb_mod.wb_master"
srcSelect -win $_nTrace1 -range {131 131 1 10 1 1}
srcTBAddBrkPnt -line 131 -file \
           /SCRATCH/srivats/vs/IEEE_Book/Practical-UVM-IEEE-Edition/Advanced_UVM_Topics/Out_of_order/src/wb_master.sv
Verdi>stop -line 131 -file /SCRATCH/srivats/vs/IEEE_Book/Practical-UVM-IEEE-Edition/Advanced_UVM_Topics/Out_of_order/src/wb_master.sv 
1
srcSelect -win $_nTrace1 -range {147 147 1 8 1 1}
srcTBAddBrkPnt -line 147 -file \
           /SCRATCH/srivats/vs/IEEE_Book/Practical-UVM-IEEE-Edition/Advanced_UVM_Topics/Out_of_order/src/wb_master.sv
Verdi>stop -line 147 -file /SCRATCH/srivats/vs/IEEE_Book/Practical-UVM-IEEE-Edition/Advanced_UVM_Topics/Out_of_order/src/wb_master.sv 
2
srcSelect -win $_nTrace1 -range {159 159 1 8 1 1}
srcTBAddBrkPnt -line 159 -file \
           /SCRATCH/srivats/vs/IEEE_Book/Practical-UVM-IEEE-Edition/Advanced_UVM_Topics/Out_of_order/src/wb_master.sv
Verdi>stop -line 159 -file /SCRATCH/srivats/vs/IEEE_Book/Practical-UVM-IEEE-Edition/Advanced_UVM_Topics/Out_of_order/src/wb_master.sv 
3
verdiDockWidgetSetCurTab -dock windowDock_InteractiveConsole_2
srcTBBTreeSelect -win $_nTrace1 -path "wb_env_tb_mod"
srcTBBTreeSelect -win $_nTrace1 -path "wb_env_tb_mod.wb_slave"
srcTBBTreeSelect -win $_nTrace1 -path "wb_env_tb_mod.wb_slave"
srcTBTreeAction -win $_nTrace1 -path "wb_env_tb_mod.wb_slave"
srcTBBTreeSelect -win $_nTrace1 -path "wb_env_tb_mod.wb_slave.slave_driver"
srcTBBTreeSelect -win $_nTrace1 -path "wb_env_tb_mod.wb_slave.slave_driver"
srcTBTreeAction -win $_nTrace1 -path "wb_env_tb_mod.wb_slave.slave_driver"
srcSelect -win $_nTrace1 -range {122 122 1 21 1 1}
srcTBAddBrkPnt -line 122 -file \
           /SCRATCH/srivats/vs/IEEE_Book/Practical-UVM-IEEE-Edition/Advanced_UVM_Topics/Out_of_order/src/wb_slave.sv
Verdi>stop -line 122 -file /SCRATCH/srivats/vs/IEEE_Book/Practical-UVM-IEEE-Edition/Advanced_UVM_Topics/Out_of_order/src/wb_slave.sv 
4
srcSelect -win $_nTrace1 -range {130 130 1 7 1 1}
srcTBAddBrkPnt -line 130 -file \
           /SCRATCH/srivats/vs/IEEE_Book/Practical-UVM-IEEE-Edition/Advanced_UVM_Topics/Out_of_order/src/wb_slave.sv
Verdi>stop -line 130 -file /SCRATCH/srivats/vs/IEEE_Book/Practical-UVM-IEEE-Edition/Advanced_UVM_Topics/Out_of_order/src/wb_slave.sv 
5
srcSelect -win $_nTrace1 -range {137 137 1 14 1 1}
srcTBAddBrkPnt -line 137 -file \
           /SCRATCH/srivats/vs/IEEE_Book/Practical-UVM-IEEE-Edition/Advanced_UVM_Topics/Out_of_order/src/wb_slave.sv
Verdi>stop -line 137 -file /SCRATCH/srivats/vs/IEEE_Book/Practical-UVM-IEEE-Edition/Advanced_UVM_Topics/Out_of_order/src/wb_slave.sv 
6
Verdi>run
srcTBRunSim
*Verdi* Enable Verdi Message Catcher.
UVM_INFO /global/apps/vcs_2019.06/etc/uvm-ieee/verdi/uvm_custom_install_verdi_recorder.sv(276) @ 0: reporter [VERDI_TR_AUTO] +UVM_TR_RECORD implicitly enables recording_details to UVM_FULL for all components. For explicit control use +UVM_DISABLE_AUTO_COMPONENT and set recording_detail on components accordingly
*Verdi* Enable Verdi Factory Dumping.
UVM_INFO @ 0: reporter [RNTST] Running test wb_env_slave_test...
*Verdi* : Begin traversing the scope (wb_env_top_mod), layer (0).
*Verdi* : End of traversing.
*Verdi* Enable Verdi Recorder.
Info: Verdi UVM 1.2 Hooks File 06/17/2014 

Stop point #4 @ 35 s;  
nsMsgSwitchTab -tab trace
nsMsgSwitchTab -tab search
nsMsgSwitchTab -tab intercon
wvCreateWindow
wvRestoreSignal -win $_nWave3 \
           "/SCRATCH/srivats/vs/IEEE_Book/Practical-UVM-IEEE-Edition/Advanced_UVM_Topics/Out_of_order/run/signal.rc" \
           -overWriteAutoAlias on -appendSignals on
Verdi>step -tb
srcTBStepIn -tb
wb_slave.sv, 123 :                this.drv_if.DAT_O    <= 64'b0;
Verdi>step -tb
srcTBStepIn -tb
wb_slave.sv, 124 :                this.drv_if.TGD_O    <= 16'b0;
Verdi>step -tb
srcTBStepIn -tb
wb_slave.sv, 125 :                this.drv_if.ACK_O    <=  'b0;
Verdi>step -tb
srcTBStepIn -tb
wb_slave.sv, 126 :                this.drv_if.RTY_O    <=  'b0;
Verdi>step -tb
srcTBStepIn -tb
wb_slave.sv, 127 :                this.drv_if.ERR_O     <=  'b0;
wvScrollDown -win $_nWave3 0
wvScrollDown -win $_nWave3 21
Verdi>step -tb
srcTBStepIn -tb
wb_slave.sv, 130 :             @(this.drv_if.CYC_I or
Verdi>step -tb
srcTBStepIn -tb
Stop point #5 @ 35 s;  
Verdi>step -tb
srcTBStepIn -tb
wb_slave.sv, 111 : 	 send_response();
Verdi>step -tb
srcTBStepIn -tb
wb_slave.sv, 191 : 	 seq_item_port.get_next_item(trans);
Verdi>step -tb
srcTBStepIn -tb
wb_slave_mon.sv, 102 :       slave_monitor_task();
Verdi>step -tb
srcTBStepIn -tb
wb_slave_mon.sv, 115 :          @(this.mon_if.CYC_I or
Verdi>step -tb
srcTBStepIn -tb
wb_master_agent_sequence_library.sv, 23 :       uvm_phase phase_ = get_starting_phase();
Verdi>step -tb
srcTBStepIn -tb
wb_master_agent_sequence_library.sv, 24 :       if (phase_ != null)
Verdi>step -tb
srcTBStepIn -tb
wb_master_agent_sequence_library.sv, 25 : 	phase_.raise_objection(this);
Verdi>step -tb
srcTBStepIn -tb
wb_master_agent_sequence_library.sv, 129 :       use_response_handler(1);
Verdi>step -tb
srcTBStepIn -tb
wb_master_agent_sequence_library.sv, 130 :       uvm_config_db #(wb_config)::get(null, "env.master_agent", "config", wb_master_config);
Verdi>step -tb
srcTBStepIn -tb
wb_master_agent_sequence_library.sv, 131 :       if (wb_master_config == null)
Verdi>step -tb
srcTBStepIn -tb
wb_master_agent_sequence_library.sv, 133 :       `uvm_do(req, get_sequencer(), -1, {address == 16; kind == wb_transaction::READ; })
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 67 :    `uvm_object_utils_begin(wb_transaction) 
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 80 :       super.new(name);
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 81 :       cfg = new();
Verdi>step -tb
srcTBStepIn -tb
wb_config.sv, 56 : super.new(name);
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 67 :    `uvm_object_utils_begin(wb_transaction) 
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 67 :    `uvm_object_utils_begin(wb_transaction) 
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 67 :    `uvm_object_utils_begin(wb_transaction) 
Verdi>step -tb
srcTBStepIn -tb
wb_slave_agent_sequence_library.sv, 50 :       fork 
Verdi>step -tb
srcTBStepIn -tb
wb_slave_agent_sequence_library.sv, 54 : 		wait(outstanding_requests.size() > 0);
Verdi>step -tb
srcTBStepIn -tb
wb_slave_agent_sequence_library.sv, 76 : 	       p_sequencer.wait_for_req(this, tr);
Verdi>step -tb
srcTBStepIn -tb
wb_slave_seqr.sv, 19 :       wait_for_grant(seq);
Verdi>step -tb
srcTBStepIn -tb
wb_slave_seqr.sv, 20 :       m_getp.get(req);
Verdi>step -tb
srcTBStepIn -tb
wb_slave.sv, 54 :       wait(packet_q.size() > 0);
Verdi>step -tb
srcTBStepIn -tb
wb_master.sv, 130 : 	 seq_item_port.get(trans);
Verdi>step -tb
srcTBStepIn -tb
wb_master.sv, 130 : 	 seq_item_port.get(trans);
Verdi>step -tb
srcTBStepIn -tb
wb_master.sv, 131 : 	 bus_lock.get(1); // We get access to the bus.
srcTBDVExpand -win $_nTrace1 -tab 0 -item {3}
Verdi>step -tb
srcTBStepIn -tb
Stop point #1 @ 45 s;  
Verdi>step -tb
srcTBStepIn -tb
wb_master.sv, 132 : 	   `uvm_info("WB_MASTER",$sformatf("%d STARTED %s TRANSACTION %s",id,trans.kind.name(),trans.sprint()),UVM_LOW)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 67 :    `uvm_object_utils_begin(wb_transaction) 
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 67 :    `uvm_object_utils_begin(wb_transaction) 
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 68 :       `uvm_field_int(address,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 69 :       `uvm_field_int(data,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 70 :       `uvm_field_int(sel,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 71 :       `uvm_field_int(tga,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 72 :       `uvm_field_int(lock,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 73 :       `uvm_field_int(num_wait_states,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 74 :       `uvm_field_enum(kinds_e,kind,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 75 :       `uvm_field_enum(status_e,status, UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 76 :       `uvm_field_enum(pipelining_e,next_cycle, UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
UVM_INFO ../src/wb_master.sv(132) @ 45: uvm_test_top.env.master_agent.mast_drv [WB_MASTER]           2 STARTED READ TRANSACTION -----------------------------------------------------------------------------------------------------------------
Name                           Type            Size  Value                                                       
-----------------------------------------------------------------------------------------------------------------
req                            wb_transaction  -     @1263                                                       
  address                      integral        64    'h10                                                        
  data                         integral        64    'h2651289d21ffe7e2                                          
  sel                          integral        8     'h1                                                         
  tga                          integral        16    'h6c03                                                      
  lock                         integral        1     'h1                                                         
  num_wait_states              integral        32    'h0                                                         
  kind                         kinds_e         32    READ                                                        
  status                       status_e        32    OK                                                          
  next_cycle                   pipelining_e    32    CLASSIC                                                     
  begin_time                   time            64    45                                                          
  depth                        int             32    'd2                                                         
  parent sequence (name)       string          21    out_of_order_sequence                                       
  parent sequence (full name)  string          60    uvm_test_top.env.master_agent.mast_sqr.out_of_order_sequence
  sequencer                    string          38    uvm_test_top.env.master_agent.mast_sqr                      
-----------------------------------------------------------------------------------------------------------------

wb_master.sv, 133 : 	 trans.tga = active_transaction_id;
Verdi>step -tb
srcTBStepIn -tb
wb_master.sv, 135 : 	 drv_if.master_cb.ADR_O <= trans.address;
Verdi>step -tb
srcTBStepIn -tb
wb_master.sv, 136 : 	 drv_if.master_cb.TGA_O <= trans.tga;
Verdi>step -tb
srcTBStepIn -tb
wb_master.sv, 137 : 	 active_transaction_id = active_transaction_id + 1;
Verdi>step -tb
srcTBStepIn -tb
wb_master.sv, 138 : 	 drv_if.master_cb.CYC_O  <= 1'b1;
Verdi>step -tb
srcTBStepIn -tb
wb_master.sv, 139 : 	 drv_if.master_cb.STB_O  <= 1'b1;
Verdi>step -tb
srcTBStepIn -tb
wb_master.sv, 140 :          drv_if.master_cb.WE_O    <= 1'b0;
Verdi>step -tb
srcTBStepIn -tb
wb_master.sv, 141 : 	 if(trans.kind == wb_transaction::WRITE) begin
Verdi>step -tb
srcTBStepIn -tb
wb_master.sv, 147 : 	 @(drv_if.master_cb);
Verdi>step -tb
srcTBStepIn -tb
Stop point #2 @ 45 s;  
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 67 :    `uvm_object_utils_begin(wb_transaction) 
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 68 :       `uvm_field_int(address,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 69 :       `uvm_field_int(data,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 70 :       `uvm_field_int(sel,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 71 :       `uvm_field_int(tga,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 72 :       `uvm_field_int(lock,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 73 :       `uvm_field_int(num_wait_states,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 74 :       `uvm_field_enum(kinds_e,kind,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 75 :       `uvm_field_enum(status_e,status, UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 76 :       `uvm_field_enum(pipelining_e,next_cycle, UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_master_agent_sequence_library.sv, 134 :       `uvm_do(req, get_sequencer(), -1, {address == 32; kind == wb_transaction::READ; })
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 67 :    `uvm_object_utils_begin(wb_transaction) 
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 80 :       super.new(name);
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 81 :       cfg = new();
Verdi>step -tb
srcTBStepIn -tb
wb_config.sv, 56 : super.new(name);
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 67 :    `uvm_object_utils_begin(wb_transaction) 
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 67 :    `uvm_object_utils_begin(wb_transaction) 
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 67 :    `uvm_object_utils_begin(wb_transaction) 
Verdi>step -tb
srcTBStepIn -tb
wb_master.sv, 131 : 	 bus_lock.get(1); // We get access to the bus.
Verdi>step -tb
srcTBStepIn -tb
Stop point #1 @ 45 s;  
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 67 :    `uvm_object_utils_begin(wb_transaction) 
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 68 :       `uvm_field_int(address,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 69 :       `uvm_field_int(data,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 70 :       `uvm_field_int(sel,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 71 :       `uvm_field_int(tga,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 72 :       `uvm_field_int(lock,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 73 :       `uvm_field_int(num_wait_states,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 74 :       `uvm_field_enum(kinds_e,kind,UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 75 :       `uvm_field_enum(status_e,status, UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_transaction.sv, 76 :       `uvm_field_enum(pipelining_e,next_cycle, UVM_ALL_ON)
Verdi>step -tb
srcTBStepIn -tb
wb_master_agent_sequence_library.sv, 28 :       uvm_phase phase_ = get_starting_phase();
Verdi>step -tb
srcTBStepIn -tb
wb_master_agent_sequence_library.sv, 29 :       if (phase_ != null)
Verdi>step -tb
srcTBStepIn -tb
wb_master_agent_sequence_library.sv, 30 : 	phase_.drop_objection(this);
Verdi>step -tb
srcTBStepIn -tb
wb_master_agent.sv, 68 :       super.report_phase(phase);
wvZoomOut -win $_nWave3
wvSetCursor -win $_nWave3 52.014142 -snap {("G4" 4)}
wvScrollDown -win $_nWave3 1
wvScrollDown -win $_nWave3 0
wvScrollDown -win $_nWave3 0
wvScrollUp -win $_nWave3 1
wvScrollUp -win $_nWave3 1
wvScrollUp -win $_nWave3 1
wvScrollUp -win $_nWave3 1
wvScrollUp -win $_nWave3 1
wvScrollUp -win $_nWave3 1
wvScrollUp -win $_nWave3 1
wvSetCursor -win $_nWave3 49.029724 -snap {("G3" 2)}
wvSelectGroup -win $_nWave3 {G3}
wvSelectSignal -win $_nWave3 {( "G3" 1 )} 
srcDeselectAll -win $_nTrace1
srcTBDVExpand -win $_nTrace1 -tab 0 -item {1}
srcTBDVCollapse -win $_nTrace1 -tab 0 -item {1}
wvSelectSignal -win $_nWave3 {( "G4" 2 )} 
verdiDockWidgetSetCurTab -dock widgetDock_<Member>
verdiDockWidgetSetCurTab -dock widgetDock_<Object._Tree>
srcTBObjectBrowser -treeExpand "wb_env_top_mod"
srcTBObjectBrowser -treeExpand "wb_env_top_mod.test"
srcTBObjectBrowser -treeSel -select \
           "wb_env_top_mod.test.wb_slave_seqr_sequence_library"
srcTBObjectBrowser -treeExpand \
           "wb_env_top_mod.test.wb_slave_seqr_sequence_library"
srcTBObjectBrowser -treeExpand \
           "wb_env_top_mod.test.wb_master_seqr_sequence_library"
srcTBObjectBrowser -treeExpand "uvm_custom_install_verdi_recording"
verdiDockWidgetSetCurTab -dock widgetDock_<Stack>
srcTBStackFind -pattern "*wb_slave*"
verdiDockWidgetSetCurTab -dock widgetDock_<Inst._Tree>
           V C S   S i m u l a t i o n   R e p o r t 
Time: 2000
CPU Time:      2.710 seconds;       Data structure size:   0.4Mb
Thu Aug 29 14:27:39 2019
nsMsgSwitchTab -tab general
debExit
